[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://btgap2n4ro8ye"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_23081"]
function = 14

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_5rbtb"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_6w7qj"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_kvokr"]
parameter_name = "DamageTaken"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_f42sf"]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1um8t"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_38b5h"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_ddmkq"]
function = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_qpeos"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_h3cb7"]
default_input_values = [0, 20.0, 1, 0.0]
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool DamageTaken;



void fragment() {
// BooleanParameter:14
	bool n_out14p0 = DamageTaken;


// ColorConstant:4
	vec4 n_out4p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);


// Input:2
	float n_out2p0 = TIME;


// FloatOp:9
	float n_in9p0 = 20.00000;
	float n_out9p0 = n_in9p0 * n_out2p0;


// FloatFunc:7
	float n_out7p0 = sin(n_out9p0);


// FloatOp:8
	float n_out8p0 = n_out4p0.x + n_out7p0;


	vec3 n_out12p0;
// If:12
	float n_in12p1 = 1.00000;
	float n_in12p2 = 0.00001;
	vec3 n_in12p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in12p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs((n_out14p0 ? 1.0 : 0.0) - n_in12p1) < n_in12p2)
	{
		n_out12p0 = vec3(n_out8p0);
	}
	else if((n_out14p0 ? 1.0 : 0.0) < n_in12p1)
	{
		n_out12p0 = n_in12p5;
	}
	else
	{
		n_out12p0 = n_in12p4;
	}


// Input:3
	vec4 n_out3p0 = COLOR;
	float n_out3p2 = n_out3p0.g;


// VectorOp:11
	vec3 n_out11p0 = n_out12p0 + vec3(n_out3p0.xyz);


// Output:0
	COLOR.rgb = n_out11p0;


}
"
graph_offset = Vector2(-659.576, -181.212)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(860, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_f42sf")
nodes/fragment/2/position = Vector2(-1160, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_1um8t")
nodes/fragment/3/position = Vector2(-820, 400)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorConstant_38b5h")
nodes/fragment/4/position = Vector2(-760, 40)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatFunc_ddmkq")
nodes/fragment/7/position = Vector2(-440, 220)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_qpeos")
nodes/fragment/8/position = Vector2(-360, -60)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_h3cb7")
nodes/fragment/9/position = Vector2(-660, 180)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatFunc_23081")
nodes/fragment/10/position = Vector2(162.4, 379.7)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_5rbtb")
nodes/fragment/11/position = Vector2(280, 60)
nodes/fragment/12/node = SubResource("VisualShaderNodeIf_6w7qj")
nodes/fragment/12/position = Vector2(-40, -220)
nodes/fragment/14/node = SubResource("VisualShaderNodeBooleanParameter_kvokr")
nodes/fragment/14/position = Vector2(-840, -200)
nodes/fragment/connections = PackedInt32Array(4, 0, 8, 0, 2, 0, 9, 1, 9, 0, 7, 0, 7, 0, 10, 0, 3, 0, 11, 1, 11, 0, 0, 0, 7, 0, 8, 1, 8, 0, 12, 3, 12, 0, 11, 0, 14, 0, 12, 0)
